---
# Default Pipeline
kind: pipeline
type: kubernetes
name: basic-pipeline

steps:
- name: npm setup
  image: registry.dev.skiosa.de/node-chrome:48963d0
  commands:
  - npm install

- name: unit tests
  image: registry.dev.skiosa.de/node-chrome:48963d0
  commands:
  - npm run test:ci

- name: branch specific code-analysis
  image: registry.dev.skiosa.de/node-chrome:48963d0
  environment:
    token:
      from_secret: sonar_token
  commands:
  - npm install sonarqube-scanner -g
  - sonar-scanner -Dsonar.branch.name=$${DRONE_TARGET_BRANCH} -Dsonar.login=$token

image_pull_secrets:
- dockerconfig

trigger:
  branch:
    exclude:
      - master
  event:
  - push

---
# PR Pipeline
kind: pipeline
type: kubernetes
name: pre-build-pipeline

steps:
- name: npm setup
  image: registry.dev.skiosa.de/node-chrome:48963d0
  commands:
  - npm install

- name: unit tests
  image: registry.dev.skiosa.de/node-chrome:48963d0
  commands:
  - npm run test:ci

- name: code-analysis & coverage
  image: registry.dev.skiosa.de/node-chrome:48963d0
  environment:
    token:
      from_secret: sonar_token
  commands:
  - npm install sonarqube-scanner -g
  - sonar-scanner -Dsonar.pullrequest.key=$${DRONE_PULL_REQUEST} -Dsonar.pullrequest.branch=$${DRONE_SOURCE_BRANCH} -Dsonar.pullrequest.base=$${DRONE_TARGET_BRANCH} -Dsonar.login=$token

image_pull_secrets:
- dockerconfig

trigger:
  event:
  - pull_request

---
# Master Pipeline
kind: pipeline
type: kubernetes
name: final-build-pipeline

steps:
- name: docker-build
  image: plugins/docker
  settings:
    registry: registry.dev.skiosa.de
    repo: registry.dev.skiosa.de/frontend
    tags: [ latest, "${DRONE_COMMIT_SHA:0:7}" ]
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

- name: npm setup
  image: registry.dev.skiosa.de/node-chrome:48963d0
  commands:
  - npm install

- name: unit tests
  image: registry.dev.skiosa.de/node-chrome:48963d0
  commands:
  - npm run test:ci

- name: master code-analysis
  image: registry.dev.skiosa.de/node-chrome:48963d0
  environment:
    token:
      from_secret: sonar_token
  commands:
  - npm install sonarqube-scanner -g
  - sonar-scanner -Dsonar.branch.name=master -Dsonar.login=$token

trigger:
  branch:
  - master
  event:
  - push
